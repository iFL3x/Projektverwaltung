@model Projektverwaltung.Database.Meilenstein
@{ 
    var meilensteinStatusList = ViewBag.MeilensteinStatusList as IEnumerable<SelectListItem>;
}

<div>
    <div class="form-group">
        <div class="col-md-10">
            <h4>@Model.name (@meilensteinStatusList.Where(s => s.Value == Model.status.ToString()).First().Text)</h4>
            <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#meilenstein_@Model.id"><span class="glyphicon glyphicon-resize-vertical"></span> Show / Hide</button>
        </div>
    </div>
    <div id="meilenstein_@Model.id" class="collapse meilenstein">
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.projektphase_id)
        @Html.HiddenFor(model => model.nicht_loeschbar)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.beschreibung, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.beschreibung, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.beschreibung, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("status", meilensteinStatusList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            //Make sure the milestone is deletable
            if (Model.nicht_loeschbar != 1)
            {
                <div class="form-group">
                    <div class="col-md-10">
                        <a href="@Url.Action("RemoveMeilenstein", "Projekte", new { meilensteinId = Model.id, projektId = Model.ProjektPhase.projekt_id })" class="btn btn-danger">
                            <span class="glyphicon glyphicon-minus-sign"></span> Meilenstein entfernen
                        </a>
                    </div>
                </div>
            }
        }

    </div>
</div>