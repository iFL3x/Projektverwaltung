@model Projektverwaltung.Database.Vorgehensmodell

@{
    ViewBag.Title = "Edit";
}

<h2>Vorgehensmodelle bearbeiten</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3>Vorgehensmodell - @Model.name</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("status", ((SelectList)ViewBag.StatusList), "Status wählen", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <h3>Phasen</h3>
        <hr />
       
        <div class="form-group">
            <div class="col-md-10">
                <a href="@Url.Action("AddPhase", "Vorgehensmodelle", new { vorgehensmodellId = Model.id })" class="btn btn-default">
                    <span class="glyphicon glyphicon-plus"></span> Phase hinzufügen
                </a>
            </div>
        </div>
        <div id="phasen">
            @Html.EditorFor(model => model.VorgehensmodellPhase)
        </div>
            
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Speichern" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Zurück zur Übersicht", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
